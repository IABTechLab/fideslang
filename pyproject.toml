###############
## Packaging ##
###############
[build-system]
requires = ["setuptools", "wheel", "setuptools_scm"]

[project]
name = "fideslang"
description = "Fides Taxonomy Language"
dynamic = ["dependencies", "version"]
readme = "README.md"
requires-python = ">=3.8, <4"
authors = [{ name = "Ethyca, Inc.", email = "fidesteam@ethyca.com" }]
license = { text = "Apache License 2.0" }
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries",
]

[project.urls]
documentation = "https://github.com/ethyca/fideslang"
changelog = "https://github.com/ethyca/fideslang/blob/main/CHANGELOG.md"

[tool.setuptools_scm]
write_to = "src/fideslang/_version.py"

[tool.setuptools.dynamic]
dependencies = { file = "requirements.txt" }

[tool.setuptools.packages.find]
where = ["src"]

############
## Typing ##
############
[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_explicit = true
files = ["src"]
no_implicit_reexport = true
plugins = ["pydantic.mypy"]
pretty = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fideslang._version"
ignore_errors = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

###########
## Black ##
###########
[tool.black]
py39 = true
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist

    # The following are specific to Black, you probably don't want those.
    | blib2to3
    | tests/data
)/
'''

############
## Pylint ##
############
[tool.pylint.messages_control]
ignore = ["migrations", "_version.py"]
disable = [
    "line-too-long",
    "too-few-public-methods",
    "duplicate-code",
    "import-error",
    "unused-argument",
    "no-self-use",
    "import-outside-toplevel",
    "unsubscriptable-object",   # Otherwise throws errors on certain Type annotations
    "too-many-arguments",
    "missing-module-docstring",
    "raise-missing-from",
    "fixme",
]
extension-pkg-whitelist = "pydantic"

[tool.pylint.reports]
reports = "no"
output-format = "colorized"

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.basic]
good-names = "_,i,setUp,tearDown,maxDiff,default_app_config"

############
## Pytest ##
############
[tool.pytest.ini_options]
testpaths = "tests"
log_level = "DEBUG"
addopts = [
    "--cov=fideslang",
    "--cov-report=term-missing",
    "-vv",
    "--no-cov-on-fail",
]
markers = [
    "unit: only runs tests that don't require non-python dependencies (i.e. a database)",
]
